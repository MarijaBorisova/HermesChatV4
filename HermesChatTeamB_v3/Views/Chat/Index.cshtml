@{
    ViewData["Title"] = "Hermes Chat App";
    
    if (User.Identity.IsAuthenticated)
    {
        ViewData["UserName"] = User.Identity.Name;
    }
}
<h1>
  Hello,@ViewData["UserName"]! Welcome to chat room - "Hermes Chat App"
</h1>
<br />
<body>

 <div id="loginBlock">
        Enter Login:<br />
        <input id="userName" type="text" />
        <input id="userPassword" type="text" />
        <input id="loginBtn" type="button" value="Sign in" />
    </div><br />
 
          <div id="inputForm">
              <input type="text" id="message" placeholder="Your Message" />
              <input type="text" id="receiver" placeholder="To Whom Address" />
              <input type="button" id="sendBtn" disabled value="Send" />
          </div>
    <div id="chatroom"></div>
 
    <script src="js\microsoft\signalr\dist\browser\signalr.min.js"></script>
    <script>
        let token;
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub", { accessTokenFactory: () => token})
            .build();
        hubConnection.on("Receive", function (message, userName) {
 
            // create element <b> for user's name
            let userNameElem = document.createElement("b");
            userNameElem.appendChild(document.createTextNode(userName + ": "));
 
            // create element <p> for user's message
            let elem = document.createElement("p");
            elem.appendChild(userNameElem);
            elem.appendChild(document.createTextNode(message));
 
            var firstElem = document.getElementById("chatroom").firstChild;
            document.getElementById("chatroom").insertBefore(elem, firstElem);
        });
        hubConnection.on("Notify", function (message) {
             
            // create element <p> for user's message
            let elem = document.createElement("p");
            elem.appendChild(document.createTextNode(message));
 
            var firstElem = document.getElementById("chatroom").firstChild;
            document.getElementById("chatroom").insertBefore(elem, firstElem);
        });
 
        // authentication
        document.getElementById("loginBtn").addEventListener("click", function (e) {
             
            var request = new XMLHttpRequest();
            request.open("POST", "/token", true);
            request.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            request.addEventListener("load", function () {
                if (request.status < 400) { // if request is successful
 
                    let data = JSON.parse(request.response);    
                    token = data.access_token;
 
                    document.getElementById("sendBtn").disabled = false;
 
                    hubConnection.start()       // starting connection with hub
                    .catch(err => {  
                        console.error(err.toString());
                        document.getElementById("loginBtn").disabled = true;
                        document.getElementById("sendBtn").disabled = true;
                    });
                }
                else {
                    console.log("Status", request.status);
                    console.log(request.responseText);
                }
            });
            // send request for authentication
            request.send("username=" + document.getElementById("userName").value +
                "&password=" + document.getElementById("userPassword").value);
        });
        // sending the message on server
        document.getElementById("sendBtn").addEventListener("click", function (e) {
            let message = document.getElementById("message").value;
            let to = document.getElementById("receiver").value;
            hubConnection.invoke("Send", message, to);
        });
    </script>
</body>
 <br/>

@if (User.Identity.IsAuthenticated)
{
	<p>@User.Identity.Name, if you would not like to use Hermes Chat App, please</p>

	<form method="post" asp-controller="Account" asp-action="LogOff">
		<input type="submit" value="Sign Out" />
	</form>
}

else
{
	
}



